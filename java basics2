PALINDROME CHECKER

function palindrome(str) {

let myRegexV2 = /[a-z0-9]/gi; // Change this line
let result = str.toLowerCase().match(myRegexV2);


return (result.join("")==result.reverse().join(""))? true:false;
}

palindrome("A man, a plan, a canal. Panama");


ROMAN CONVERTER
function convertToRoman(num) {
  var result="";

  
while (num>0)
{
if (num>=1000)
{
  num=num-1000;
  result=result+'M';
}
else if(num>=900)
{
 num=num-900;
  result=result+'CM';
}
else if(num>=500)
{
 num=num-500;
  result=result+'D';
}
else if(num>=400)
{
 num=num-400;
  result=result+'CD';
}
else if(num>=100)
{
 num=num-100;
  result=result+'C';
}
else if(num>=90)
{
 num=num-90;
  result=result+'XC';
}else if(num>=50)
{
 num=num-50;
  result=result+'L';
}else if(num>=40)
{
 num=num-40;
  result=result+'XL';
}else if(num>=10)
{
 num=num-10;
  result=result+'X';
}else if(num>=9)
{
 num=num-9;
  result=result+'IX';
}else if(num>=5)
{
 num=num-5;
  result=result+'V';
}else if(num>=4)
{
 num=num-4;
  result=result+'IV';
}else if(num>=1)
{
 num=num-1;
  result=result+'I';
}

}
console.log(result)
 return result;
}

convertToRoman(3999);

CAESARS CYPHER

function rot13(str) {
var newString="";

    for (let i = 0; i < str.length; i++) {
      /* code of current character */
      const charCode = str.charCodeAt(i);
 if(charCode<65|charCode>90)
     {
       newString=newString + String.fromCharCode(charCode);
     }

     else if(charCode+13>65&&charCode+13>90)
     {
var newCharcode=((charCode+13)-90)+64;


newString=newString + String.fromCharCode(newCharcode);

     }
     else if(charCode+13>=65)
     {
        newString=newString + String.fromCharCode(charCode+13);
     }
 
    }

console.log(newString)


  return newString;
}

rot13("SERR PBQR PNZC");

VERIFY US NUMBER

function telephoneCheck(str) {
  var count=0;
const str2=str.split("");
  var myRegex2= /[1-9]/gi;
 
for(let i=0; i<str2.length;i++)
{
  if(myRegex2.test(str2))
  {
    count++;
  }
}
console.log(count);
if (count==str2.length&&count==10)
{
return true
}
else 
{

  var myRegex= /^(1|1 |)(\([2-9][0-9][0-9]\)|\([2-9][0-9][0-9]\) | [2-9][0-9][0-9]-|[2-9][0-9][0-9]-|[2-9][0-9][0-9]|[2-9][0-9][0-9]-)[0-9]{3}-[0-9]{4}|[0-9]{3} [0-9]{4}/gi;
  var result=myRegex.test(str);
// console.log(str.match(myRegex));
return result;
}
}

telephoneCheck("5555555555");


CASH REGISTER

function checkCashRegister(price, cash, cid) {

var total=(cash-price).toFixed(2);


var result=0;
var answer=
  {'status': "", 'change':[]}
;
var cid2=[
  ["PENNY", 0.00],
  ["NICKEL", 0.00],
  ["DIME", 0.00],
  ["QUARTER", 0.00],
  ["ONE", 0],
  ["FIVE", 0],
  ["TEN", 0],
  ["TWENTY", 0],
  ["ONE HUNDRED", 0]
]

 for(let i=0; i<cid.length;i++)
  {
   
   result=result+cid[i][1];
 
   
  }
  if (result==total)
{
answer.status='CLOSED' 
answer.change=cid; 
return answer;
}



function cal(numProp,restar)
{
if(cid[numProp][1]>=restar) 
  {
 total=(total-restar).toFixed(2);   

  cid[numProp][1]= (cid[numProp][1]-restar).toFixed(2);
 cid2[numProp][1]= cid2[numProp][1]+restar;

  }
}

while (total>0|total===0)
 
{ 
  
if (total>=100&& cid[8][1]>=100)
{  
  cal(8,100)
  
}
else if(total>=20&& cid[7][1]>=20)
{
  cal(7,20)
}
else if(total>=10&& cid[6][1]>=10)
{
  cal(6,10)
}
else if(total>=5&& cid[5][1]>=5)
{
  cal(5,5)
}
else if(total>=1&& cid[4][1]>=1)
{
  cal(4,1)
}
else if(total>=.25&& cid[3][1]>=.25)
{
  cal(3,0.25)
}
else if(total>=.1&& cid[2][1]>=.1)
{
  cal(2,0.1)
}

else if(total>=0.05&& cid[1][1]>=.05)
{
  cal(1,.05)
}
else if(total>=0.01&& cid[0][1]>=.01)
{
  cal(0,0.01)
}
else
{
  break;
}
}

if(total==0)
{
  
    for(let i=0; i<cid2.length;i++)
  {
    if(cid2[i][1]!=0)
    {
   
answer.status='OPEN';
answer.change.unshift(cid2[i]);
 
    }
   
  }
  return answer; 
}
else if (total>0)
{
answer.status="INSUFFICIENT_FUNDS";
return answer;
}
}

checkCashRegister(19.5, 20, [["PENNY", 0.01], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 1], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]);


