












SUMM ALL NUMBERS IN A RANGE

function sumAll(arr) {
  
let sumBetween=0;
for(let i=Math.min(...arr); i<=Math.max(...arr);i++)

{
sumBetween+=i;
}
return sumBetween;
}

sumAll([1, 4]);

--Diff Two Arrays

function diffArray(arr1, arr2) {
  const newArr = [];
  var major=[...arr1];
  var minor=[...arr2];
 var val=false;
function check(first,second){

   for (let i = 0; i < first.length; i++) {
      if (second.indexOf(first[i]) === -1) {
  
        newArr.push(first[i]);
      }
    }
  return newArr;
}

check(major,minor);


check(minor,major);

return newArr;

}

diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);

--Seek and Destroy

function destroyer(arr) {
      
    var newArr2=[];
     for(let j=0; j<arguments[0].length;j++)
     {
       var val=false;
        for(let i=1; i<arguments.length;i++)
     {
  if(arguments[0][j]==arguments[i])
  {
   val=true;  
  }
         }
     if (!val)
  {
    newArr2.push(arguments[0][j])
  }
     }
       return newArr2;
  }
  
  destroyer([1, 2, 3, 1, 2, 3], 2, 3);

--ART THOU
function whatIsInAName(collection, source) {
 
var count=0;
   var prop=(Object.keys(source));
  const arr = [];
  // Only change code below this line
 for(let i=0; i<collection.length;i++)
 {
   for(let j=0; j<prop.length;j++)
   {
if(collection[0,i][prop[j]]==source[prop[j]])
{
    count++;
}
   }
   if (count==prop.length)
{
 arr.push(collection[0,i]);
}
count=0;
 }
  return arr;
}

whatIsInAName([{ "apple": 1, "bat": 2 }, { "apple": 1 }, { "apple": 1, "bat": 2, "cookie": 2 }], { "apple": 1, "cookie": 2 }); 

OR
function whatIsInAName(collection, source) {
  // "What's in a name? that which we call a rose
  // By any other name would smell as sweet.”
  // -- by William Shakespeare, Romeo and Juliet
  const souceKeys = Object.keys(source);

  // filter the collection
  return collection.filter(obj => {
    for (let i = 0; i < souceKeys.length; i++) {
      if (!obj.hasOwnProperty(souceKeys[i]) ||
          obj[souceKeys[i]] !== source[souceKeys[i]]) {
        return false;
      }
    }
    return true;
  });
}

// test here
whatIsInAName(
  [
    { first: "Romeo", last: "Montague" },
    { first: "Mercutio", last: null },
    { first: "Tybalt", last: "Capulet" }
  ],
  { last: "Capulet" }
);

--Spinal Tap Case

function spinalCase(str) {
 

    return str.match(/[A-Z][a-z]+|[a-z]+/g).join("-").toLowerCase();

}

spinalCase("AllThe-small Things");

OR

function spinalCase(str) {
  // "It's such a fine line between stupid, and clever."
  // --David St. Hubbins

  return str
    .split(/\s|_|(?=[A-Z])/)
    .join("-")
    .toLowerCase();
}

--Pig Latin

function translatePigLatin(str) {
let myRegex = /^[^aeiou]+/gi; // Change this line
var result= str.match(myRegex); 

 return result?
 str.slice(result[0].length)+result+"ay"
 :  str+"way";
}


translatePigLatin("glove");
